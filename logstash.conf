input {
  stdin {
    type => "ezproxylog"
    debug => true
  }
  file {
    debug => true
    discover_interval => 1
    path => [ "/opt/logstash/ezproxy/ezproxy*.res" ]
    sincedb_path => "/opt/logstash/ezproxy/.sincedb"    
    start_position => "beginning"
    type => "ezproxylog"    
  }
}

filter {
  grok {
    type => "ezproxylog"
    # Default EZproxy LogFormat command:
    # LogFormat %h %l %u %t "%r" %s %b
    # Where:
    #  h = Host accessing EZproxy (always IP address).
    #  l = Remote username obtained by idented (identd is not used, so this always inserts -).
    #  u = Username or Session Identifier
    #  t = Date/time of request. Can appear as %{format}
    #  r = Complete request
    #  s = HTTP numeric status code
    #  b = Number of bytes transferred
    pattern => "%{WORD:ezproxy_logformat} %{IP:request_client_ip} %{USERNAME:request_remote_username} %{USERNAME:request_username} \[%{HTTPDATE:request_timestamp}\] %{QUOTEDSTRING:request_raw} %{NUMBER:response_http} %{NUMBER:response_bytes} \"%{URI:requested_uri}\""
# %{USERNAME:remote_username} %{USERNAME:username} %{SYSLOGTIMESTAMP:timestamp} %{QUOTEDSTRING:request_raw} %{NUMBER:response_http} %{NUMBER:bytes} %{HOST:requested_host} %{GREEDYDATA:request_raw}"
  }
  date {
    type => "ezproxylog"
    # Try to set the @timestamp field from the 'request_timestamp' field (parsed above with
    # grok).
    match => [ "request_timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
   geoip {
     type => "ezproxylog"
     # Try to get GeoIP lookup using value from the 'request_client_ip' field (parsed above with
     # grok).
     source => "request_client_ip"
   }
  grok {
    # Add field requested_host to the output, matching on URIHOST from requested_uri field.
    type => "ezproxylog"
    match => [ "requested_uri", "%{URIPROTO}://(?:%{USER}(?::[^@]*)?@)?(?:%{URIHOST:requested_host})?(?:%{URIPATHPARAM})?" ]
  }   
}

output {
  stdout {
    type => "ezproxylog"
    debug => true
    message => "%{@message}"
  }
  elasticsearch {
    embedded => true
    type => "ezproxylog"
  }
}